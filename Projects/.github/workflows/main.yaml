# Your workflow name.
name: Deploy to heroku

# Run workflow on every push to main branch
on:
  push:
    branches: [main]

# Your workflow jobs
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #check out your repository.
    -name: Checkout
    uses: actions/checkout@v2


### Important Part ###

      -name: Build,Push and Release a Docker container to Heroku. #Your custom step name
      uses: gounit/heroku-docker-deploy@v1.3.3 #GitHub action name  (leave it as it is).
      with:
        # Below you must provide variables for your Heroku app.

        # The email address associated to your heroku account
        # If you don't want to use repository secrets (which is recommended) you can do:
        # email: my.email@example.com
        email: ${{secrets.HEROKU_EMAIL}}

        # Heroku api key asociated with provided user's email.
        # Api key is available under your Heroku account settings.
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}


        # Name opf the heroku application to which build is to be sent.
        heroku_app_name: ${{ secrest.HEROKU_APP_NAME}}
        # (optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

        # (optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: Dockerfile

        # (optional, default: "")
        # Aditional options of docker build command.
        docker_options: "--no-cache"

        # (optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, tis argument is set to the "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web



        ### IMPORTANT PART ### 